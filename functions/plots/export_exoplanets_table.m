function export_exoplanets_table(tableData, filename)
%EXPORT_EXOPLANETS_TABLE Create a LaTeX table from the exoplanet table
%generated by extract_statistics_exoplanets.
%
% INPUTS:
%   tableData[table]    Statistic table associated to the given array, with
%                       fields:
%       name[string]    
%       MeanDetections[1]
%       MedianDetections[1]
%       MedianRadius[1]
%       MeanRocky[1]
%       MeanSuperEarth[1]
%       MeanSubNeptune[1]
%       MeanSubJovian[1]
%       MeanJovian[1]
%       MeanPlanets_AFGK[1]
%       MeanPlanets_Mstar[1]
%       MeanTemp[1]
%       MeanDist[1]
%       MinDist[1]
%   filename[string]    Path to the file to be saved (without extension).
%   caption[string]     Caption of the table to created. NOTE: if backslash
%                       is used, remember to escape the characters if
%                       needed: \caption --> \\caption.
%   label[string]       Label of the table.
%
% NOTE:
%   - Table structure inspired by Dandumont.
%   - This table include only the tabular data, so that the caption can be
%     modified in LaTeX. 
%
% REFERENCES:
%   Kopparapu RK, Hébrard E, Belikov R, Batalha NM, Mulders GD, Stark C, et 
%   al. Exoplanet Classification and Yield Estimates for Direct Imaging 
%   Missions. ApJ. 2018 Apr 1;856(2):122. 
%
% VERSION HISTORY:
%   2025-05-09 -------- 1.0
%
% Author: Francesco De Bortoli
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Open file
fid = fopen(filename + ".tex", 'w');

% Extract configuration number and names
Nconfigs = height(tableData);
names = tableData.Name;

% Parameters (extended names)
params = ["Mean number of detections", "Median number of detections", ...
    "Median radius [$R_\Earth$]", "Mean number of “Rocky” planets", ...
    "Mean number of “Super-Earth” planets", "Mean number of “Sub-Neptunes” planets", ...
    "Mean number of “Sub-Jovian” planets", "Mean number of “Jovian” planets", ...
    "Mean number of planets around A, F, G and K stars", "Mean number of planets around M stars", ...
    "Mean temperature [K]", "Mean distance [pc]", "Minimum distance [pc]"];
Nparams = numel(params);

% Header
fprintf(fid, '    \\begin{tabular}{l%s}\n', repmat('c', 1, Nconfigs));
fprintf(fid, '        \\toprule\n');
fprintf(fid, '        \\textbf{Parameter}');
for i = 1:Nconfigs
    fprintf(fid, ' & \\textbf{%s}', names{i});
end
fprintf(fid, ' \\\\\n');
fprintf(fid, '        \\midrule \\midrule \n');

% For every parameter/row...
for p = 1:Nparams
    paramName = params{p};

    fprintf(fid, '        %s', paramName);

    for i = 1:Nconfigs
        value = tableData{i, p+1}; % Add 1 to avoid "Name", which is not wanted"
        fprintf(fid, ' & %.2f', value);
    end
    fprintf(fid, ' \\\\\n');
end

% Footer
fprintf(fid, '        \\bottomrule\n');
fprintf(fid, '    \\end{tabular}\n');

% Chiudi file
fclose(fid);

end